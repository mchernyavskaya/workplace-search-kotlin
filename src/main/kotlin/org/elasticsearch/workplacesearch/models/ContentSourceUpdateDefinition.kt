/**
 * Workplace Search API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.elasticsearch.workplacesearch.models

import org.elasticsearch.workplacesearch.models.ContentSourceAutomaticQueryRefinements
import org.elasticsearch.workplacesearch.models.ContentSourceDisplay
import org.elasticsearch.workplacesearch.models.ContentSourceFacets
import org.elasticsearch.workplacesearch.models.ContentSourceIndexing

import com.squareup.moshi.Json

/**
 * Definition to update a Workplace Search Content Source
 *
 * @param name The human readable display name for this Content Source.
 * @param isSearchable Whether or not this Content Source will be searchable on the search page.
 * @param schema 
 * @param display 
 * @param indexing 
 * @param facets 
 * @param automaticQueryRefinement 
 */

data class ContentSourceUpdateDefinition (

    /* The human readable display name for this Content Source. */
    @Json(name = "name")
    val name: kotlin.String,

    /* Whether or not this Content Source will be searchable on the search page. */
    @Json(name = "is_searchable")
    val isSearchable: kotlin.Boolean,

    @Json(name = "schema")
    val schema: ContentSourceUpdateDefinition.Schema? = null,

    @Json(name = "display")
    val display: ContentSourceDisplay? = null,

    @Json(name = "indexing")
    val indexing: ContentSourceIndexing? = null,

    @Json(name = "facets")
    val facets: ContentSourceFacets? = null,

    @Json(name = "automatic_query_refinement")
    val automaticQueryRefinement: ContentSourceAutomaticQueryRefinements? = null

) {

    /**
     * 
     *
     * Values: text,geolocation,number,date
     */
    enum class Schema(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "geolocation") geolocation("geolocation"),
        @Json(name = "number") number("number"),
        @Json(name = "date") date("date");
    }
}

