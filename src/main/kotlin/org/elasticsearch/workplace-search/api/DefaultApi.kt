/**
 * Workplace Search API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package org.elasticsearch.workplace-search.api

-search.model.ErrorsResponse
-search.model.TriggersBlocklistWrapperDefinition
-search.model.WhoamiResponse

import io.swagger.client.infrastructure.*

class DefaultApi(basePath: kotlin.String = "{schemes}://{host}:{port}") : ApiClient(basePath) {

    /**
     * Get the authenticated user
     * Get the authenticated user
     * @param getToken Whether or not to include an access token in the response. (optional, default to false)
     * @return WhoamiResponse
     */
    @Suppress("UNCHECKED_CAST")
    fun getCurrentUser(getToken: kotlin.Boolean? = null): WhoamiResponse {
        val localVariableQuery: MultiValueMap = mapOf("get_token" to listOf("$getToken"))
        val localVariableConfig = RequestConfig(
                RequestMethod.GET,
                "/api/ws/v1/whoami", query = localVariableQuery
        )
        val response = request<WhoamiResponse>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as WhoamiResponse
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
    /**
     * Get current triggers blocklist
     * Get current triggers blocklist
     * @return TriggersBlocklistWrapperDefinition
     */
    @Suppress("UNCHECKED_CAST")
    fun getTriggersBlocklist(): TriggersBlocklistWrapperDefinition {
        
        val localVariableConfig = RequestConfig(
                RequestMethod.GET,
                "/api/ws/v1/automatic_query_refinement"
        )
        val response = request<TriggersBlocklistWrapperDefinition>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as TriggersBlocklistWrapperDefinition
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
    /**
     * Update current triggers blocklist
     * Update current triggers blocklist
     * @return TriggersBlocklistWrapperDefinition
     */
    @Suppress("UNCHECKED_CAST")
    fun putTriggersBlocklist(): TriggersBlocklistWrapperDefinition {
        
        val localVariableConfig = RequestConfig(
                RequestMethod.PUT,
                "/api/ws/v1/automatic_query_refinement"
        )
        val response = request<TriggersBlocklistWrapperDefinition>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as TriggersBlocklistWrapperDefinition
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
}
